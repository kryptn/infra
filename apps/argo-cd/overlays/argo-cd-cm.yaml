apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
data:
  url: https://argocd.arq.dev
  users.anonymous.enabled: "false"
  admin.enabled: "true"
  repository.credentials: |
    - url: https://github.com/kryptn/
      passwordSecret:
        name: argocd-github-token
        key: github_token
      usernameSecret:
        name: argocd-github-token
        key: github_username
  resource.customizations: |
    admissionregistration.k8s.io/MutatingWebhookConfiguration:
      # List of json pointers in the object to ignore differences
      ignoreDifferences: |
        jsonPointers:
        - /webhooks/0/clientConfig/caBundle
    certmanager.k8s.io/Certificate:
      # Lua script for customizing the health status assessment
      health.lua: |
        hs = {}
        if obj.status ~= nil then
          if obj.status.conditions ~= nil then
            for i, condition in ipairs(obj.status.conditions) do
              if condition.type == "Ready" and condition.status == "False" then
                hs.status = "Degraded"
                hs.message = condition.message
                return hs
              end
              if condition.type == "Ready" and condition.status == "True" then
                hs.status = "Healthy"
                hs.message = condition.message
                return hs
              end
            end
          end
        end
        hs.status = "Progressing"
        hs.message = "Waiting for certificate"
        return hs
    cert-manager.io/Certificate:
      # Lua script for customizing the health status assessment
      health.lua: |
        hs = {}
        if obj.status ~= nil then
          if obj.status.conditions ~= nil then
            for i, condition in ipairs(obj.status.conditions) do
              if condition.type == "Ready" and condition.status == "False" then
                hs.status = "Degraded"
                hs.message = condition.message
                return hs
              end
              if condition.type == "Ready" and condition.status == "True" then
                hs.status = "Healthy"
                hs.message = condition.message
                return hs
              end
            end
          end
        end
        hs.status = "Progressing"
        hs.message = "Waiting for certificate"
        return hs
    apps/Deployment:
      # List of Lua Scripts to introduce custom actions
      actions: |
        # Lua Script to indicate which custom actions are available on the resource
        discovery.lua: |
          actions = {}
          actions["restart"] = {}
          return actions
        definitions:
          - name: restart
            # Lua Script to modify the obj
            action.lua: |
              local os = require("os")
              if obj.spec.template.metadata == nil then
                  obj.spec.template.metadata = {}
              end
              if obj.spec.template.metadata.annotations == nil then
                  obj.spec.template.metadata.annotations = {}
              end
              obj.spec.template.metadata.annotations["kubectl.kubernetes.io/restartedAt"] = os.date("!%Y-%m-%dT%XZ")
              return obj
    bitnami.com/SealedSecret:
      health.lua: |
        hs = {}
        hs.status = "Healthy"
        hs.message = "Controller doesn't report resource status"
        return hs
  resource.compareoptions: |
    # disables status field diffing in specified resource types
    # 'crd' - CustomResourceDefinition-s (default)
    # 'all' - all resources
    # 'none' - disabled
    ignoreResourceStatusField: crd

  dex.config: |
    connectors:
      # GitHub example
      - type: github
        id: github
        name: GitHub
        config:
          clientID: 3f6eb298c1a35668a738
          clientSecret: $argocd-github-oidc-token:oidc_client_secret
          loadAllGroups: true
