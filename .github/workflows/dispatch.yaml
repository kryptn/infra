on:
  repository_dispatch:
    types: [newreleases]

jobs:
  poc:
    if: ${{ github.event.client_payload.provider == 'github' && github.event.client_payload.project == 'kryptn/something-else'}}
    runs-on: ubuntu-latest
    steps:
      - run: echo "dispatched"

  update-app-poc:
    if: ${{ github.event.client_payload.provider == 'github' && github.event.client_payload.project == 'kryptn/newreleases-dispatch-action'}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: "main"

      - name: update image
        uses: kryptn/infra/.github/actions/update-image.yaml@main
        with:
          app-dir: ./apps/newreleases-dispatch-action
          branch: update-newreleases
          version: ${{ github.events.client_payload.version }}
          project: ${{ github.events.client_payload.project }}

      # - name: Show Info
      #   env:
      #     VERSION: ${{ github.event.client_payload.version }}
      #   run: echo "updating app to $VERSION"



      # - name: Prepare Git
      #   run: |
      #     git config --global user.name "kryptn"
      #     git config --global user.email "kryptn@users.noreply.github.com"
      #     git fetch origin

      #     # switch if exists, else create new from main
      #     git switch auto/update-newreleases || git switch -c auto/update-newreleases
      #     git --no-pager log  --oneline -n 5

      # - name: Update image tag
      #   uses: mikefarah/yq@master
      #   with:
      #     cmd: yq -i '.images[].newTag = "${{ github.event.client_payload.version }}"' "./apps/newreleases-dispatch-action/kustomization.yaml"

      # - name: Commit and Push Update
      #   working-directory: ./apps/newreleases-dispatch-action
      #   run: |
      #     git rev-parse --abbrev-ref HEAD
      #     git --no-pager log  --oneline -n 5

      #     git add .
      #     git status
      #     git commit -m "automated bump to version ${{ github.event.client_payload.version }}"
      #     git rev-parse --abbrev-ref HEAD

      #     git push origin auto/update-newreleases

      # - name: pull-request
      #   uses: repo-sync/pull-request@v2
      #   with:
      #     pr_title: "Updating ${{ github.event.client_payload.project }}"
      #     source_branch: "auto/update-newreleases"
      #     destination_branch: "main"
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
